<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        ">

    <!-- ### 配置数据源 begin ###-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
        <property name="driverClassName" value="${spring.datasource.driverClassName}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${spring.datasource.initialSize:5}"/>
        <property name="minIdle" value="${spring.datasource.minIdle:5}"/>
        <property name="maxActive" value="${spring.datasource.maxActive:20}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${spring.datasource.maxWait:30000}"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${spring.datasource.timeBetweenEvictionRunsMillis}"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${spring.datasource.minEvictableIdleTimeMillis}"/>

        <property name="validationQuery" value="${spring.datasource.validationQuery}"/>
        <property name="testWhileIdle" value="${spring.datasource.testWhileIdle}"/>
        <property name="testOnBorrow" value="${spring.datasource.testOnBorrow}"/>
        <property name="testOnReturn" value="${spring.datasource.testOnReturn}"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${spring.datasource.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${spring.datasource.maxPoolPreparedStatementPerConnectionSize}"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${spring.datasource.filters}"/>

        <property name="connectionProperties" value="{spring.datasource.connectionProperties}"/>

    </bean>
    <!-- ### 配置数据源  end ###-->


    <bean id="dynamicDataSource" class="com.uhomed.router.dal.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="com.uhomed.router.dal.datasource.DataSourceContext">
                <entry value-ref="dataSource" key="PROTAL"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource"/>
        <property name="mapperLocations" value="classpath:config/mybatis/*.xml"/>
        <property name="configLocation" value="classpath:config/deploy/mybatis-config.xml"/>
    </bean>



    <!--<context:annotation-config />-->
    <!--<context:component-scan base-package="com.uhomed.router.dal.dao"-->
    <!--annotation-config="true" />-->

</beans>