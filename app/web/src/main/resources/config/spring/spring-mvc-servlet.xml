<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
    <!-- 启动Spring的组件自动扫描机制。Spring会自动扫描base-package指定的包中的类和子包里面类 -->
    <!-- 此处可参考我的文章http://blog.csdn.net/jadyer/article/details/6038604 -->
    <context:component-scan base-package="com.uhomed.router.web"/>

    <!-- 启动SpringMVC的注解功能，它会自动注册HandlerMapping、HandlerAdapter、ExceptionResolver的相关实例 -->
    <!-- <mvc:annotation-driven /> -->
    <!-- 使用CGLIB动态代理AOP -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>


    <!-- begin ViewResolver配置 -->
    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="favorParameter" value="true"/>
        <property name="parameterName" value="format"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="application/json"/>

        <property name="mediaTypes">
            <map>
                <entry key="xml" value="application/xml"/>
                <entry key="json" value="application/json"/>
                <entry key="jsonp" value="application/javascript"/>
                <entry key="html" value="text/html"/>
            </map>
        </property>
    </bean>

    <bean id="templateResolver"
          class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="file:${base.dir}/htdoc/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML"/>
        <property name="cacheable" value="false"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>


    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <!-- 自定义的ViewResolver放在这里 -->
        <property name="viewResolvers">
            <list>
                <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
                    <property name="templateEngine" ref="templateEngine"/>
                    <property name="order" value="1"/>
                    <property name="characterEncoding" value="UTF-8"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView"/>
                <bean class="com.uhomed.router.core.fastjson.FastJsonJsonpView"/>
            </list>
        </property>
    </bean>

    <!-- <mvc:resources mapping="/favicon.ico" location="/favicon.ico" /> -->

    <!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        定义默认的异常处理页面，当该异常类型的注册时使用 <property name="defaultErrorView" value="error"></property>
        定义异常处理页面用来获取异常信息的变量名，默认名为exception <property name="exceptionAttribute" value="ex"></property>
        定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 <property name="exceptionMappings"> <props>
        <prop key="com.atxiaoge.webserver.web.exception.ControllerException">error-controller</prop>
        </props> </property> </bean> -->

    <bean id="controllerExceptionHandler"
          class="com.uhomed.router.web.exception.ControllerExceptionHanlder"/>

    <bean id="conversionService"
          class="org.springframework.format.support.DefaultFormattingConversionService"/>

    <!-- 更换fastjson参数解析 -->
    <!-- mvc:annotation-driven 需要放在下边 -->
    <bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="webBindingInitializer">
            <bean
                    class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
                <property name="conversionService" ref="conversionService"/>
            </bean>
        </property>
        <property name="messageConverters">
            <list>
                <!-- <bean id="stringHttpMessageConverter" -->
                <!-- class="org.springframework.http.converter.StringHttpMessageConverter"
                    /> -->
                <bean
                        class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain;charset=UTF-8</value>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/xml;charset=UTF-8</value>
                            <value>text/xml</value>
                        </list>
                    </property>
                </bean>
                <bean
                        class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                    <!-- MediaTypes -->
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json</value>
                        </list>
                    </property>
                </bean>

            </list>
        </property>
    </bean>
    <!-- end -->
    <!-- 启动SpringMVC的注解功能，它会自动注册HandlerMapping、HandlerAdapter、ExceptionResolver的相关实例 -->
    <mvc:annotation-driven/>

</beans>  